; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -ostm32nes\usart.o --depend=stm32nes\usart.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I../Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I.\RTE\_stm32nes -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F407xx -DUSE_FULL_LL_DRIVER -DSTM32F407xx -DUSE_HAL_DRIVER --omf_browse=stm32nes\usart.crf ../Src/usart.c]
                          THUMB

                          AREA ||i.MX_USART1_UART_Init||, CODE, READONLY, ALIGN=2

                  MX_USART1_UART_Init PROC
;;;48     
;;;49     void MX_USART1_UART_Init(void)
000000  b510              PUSH     {r4,lr}
;;;50     {
000002  b08e              SUB      sp,sp,#0x38
;;;51       LL_USART_InitTypeDef USART_InitStruct = {0};
000004  2400              MOVS     r4,#0
000006  9401              STR      r4,[sp,#4]
000008  486e              LDR      r0,|L1.452|
00000a  9400              STR      r4,[sp,#0]
;;;52     
;;;53       LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
00000c  9406              STR      r4,[sp,#0x18]
00000e  9402              STR      r4,[sp,#8]            ;51
000010  9403              STR      r4,[sp,#0xc]          ;51
000012  9404              STR      r4,[sp,#0x10]         ;51
000014  9405              STR      r4,[sp,#0x14]         ;51
000016  940b              STR      r4,[sp,#0x2c]         ;51
000018  6801              LDR      r1,[r0,#0]            ;51
00001a  f0410110          ORR      r1,r1,#0x10           ;51
00001e  6001              STR      r1,[r0,#0]            ;51
000020  6800              LDR      r0,[r0,#0]            ;51
000022  f0000010          AND      r0,r0,#0x10           ;51
000026  9007              STR      r0,[sp,#0x1c]         ;51
000028  4867              LDR      r0,|L1.456|
00002a  6801              LDR      r1,[r0,#0]            ;51
00002c  f0410102          ORR      r1,r1,#2              ;51
000030  6001              STR      r1,[r0,#0]            ;51
000032  6800              LDR      r0,[r0,#0]            ;51
;;;54       /* Peripheral clock enable */
;;;55       LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_USART1);
;;;56       
;;;57       LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOB);
;;;58       /**USART1 GPIO Configuration  
;;;59       PB6   ------> USART1_TX
;;;60       PB7   ------> USART1_RX 
;;;61       */
;;;62       GPIO_InitStruct.Pin = LL_GPIO_PIN_6|LL_GPIO_PIN_7;
;;;63       GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
;;;64       GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
;;;65       GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
;;;66       GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
;;;67       GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
;;;68       LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
000034  a908              ADD      r1,sp,#0x20
000036  f0000002          AND      r0,r0,#2
00003a  9007              STR      r0,[sp,#0x1c]         ;62
00003c  20c0              MOVS     r0,#0xc0              ;62
00003e  9008              STR      r0,[sp,#0x20]         ;63
000040  2002              MOVS     r0,#2                 ;63
000042  9009              STR      r0,[sp,#0x24]         ;64
000044  2003              MOVS     r0,#3                 ;64
000046  900a              STR      r0,[sp,#0x28]         ;66
000048  2001              MOVS     r0,#1                 ;66
00004a  900c              STR      r0,[sp,#0x30]         ;67
00004c  2007              MOVS     r0,#7                 ;67
00004e  900d              STR      r0,[sp,#0x34]
000050  485e              LDR      r0,|L1.460|
000052  f7fffffe          BL       LL_GPIO_Init
000056  485f              LDR      r0,|L1.468|
;;;69     
;;;70       /* USART1 DMA Init */
;;;71       
;;;72       /* USART1_TX Init */
;;;73       LL_DMA_SetChannelSelection(DMA2, LL_DMA_STREAM_7, LL_DMA_CHANNEL_4);
000058  495d              LDR      r1,|L1.464|
00005a  79c2              LDRB     r2,[r0,#7]
00005c  588a              LDR      r2,[r1,r2]
00005e  79c3              LDRB     r3,[r0,#7]
000060  f0226260          BIC      r2,r2,#0xe000000
000064  f0426200          ORR      r2,r2,#0x8000000
000068  50ca              STR      r2,[r1,r3]
00006a  79c2              LDRB     r2,[r0,#7]
00006c  588a              LDR      r2,[r1,r2]
00006e  79c3              LDRB     r3,[r0,#7]
000070  f02202c0          BIC      r2,r2,#0xc0
000074  f0420240          ORR      r2,r2,#0x40
000078  50ca              STR      r2,[r1,r3]
00007a  79c2              LDRB     r2,[r0,#7]
00007c  588a              LDR      r2,[r1,r2]
00007e  79c3              LDRB     r3,[r0,#7]
000080  f4223240          BIC      r2,r2,#0x30000
000084  50ca              STR      r2,[r1,r3]
000086  79c2              LDRB     r2,[r0,#7]
000088  588a              LDR      r2,[r1,r2]
00008a  79c3              LDRB     r3,[r0,#7]
00008c  f4227290          BIC      r2,r2,#0x120
000090  50ca              STR      r2,[r1,r3]
000092  79c2              LDRB     r2,[r0,#7]
000094  588a              LDR      r2,[r1,r2]
000096  79c3              LDRB     r3,[r0,#7]
000098  f4227200          BIC      r2,r2,#0x200
00009c  50ca              STR      r2,[r1,r3]
00009e  79c2              LDRB     r2,[r0,#7]
0000a0  588a              LDR      r2,[r1,r2]
0000a2  79c3              LDRB     r3,[r0,#7]
0000a4  f4426280          ORR      r2,r2,#0x400
0000a8  50ca              STR      r2,[r1,r3]
0000aa  79c2              LDRB     r2,[r0,#7]
0000ac  588a              LDR      r2,[r1,r2]
0000ae  79c3              LDRB     r3,[r0,#7]
0000b0  f42252c0          BIC      r2,r2,#0x1800
0000b4  50ca              STR      r2,[r1,r3]
0000b6  79c2              LDRB     r2,[r0,#7]
0000b8  588a              LDR      r2,[r1,r2]
0000ba  79c3              LDRB     r3,[r0,#7]
0000bc  f42242c0          BIC      r2,r2,#0x6000
0000c0  50ca              STR      r2,[r1,r3]
0000c2  79c3              LDRB     r3,[r0,#7]
;;;74     
;;;75       LL_DMA_SetDataTransferDirection(DMA2, LL_DMA_STREAM_7, LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
;;;76     
;;;77       LL_DMA_SetStreamPriorityLevel(DMA2, LL_DMA_STREAM_7, LL_DMA_PRIORITY_LOW);
;;;78     
;;;79       LL_DMA_SetMode(DMA2, LL_DMA_STREAM_7, LL_DMA_MODE_NORMAL);
;;;80     
;;;81       LL_DMA_SetPeriphIncMode(DMA2, LL_DMA_STREAM_7, LL_DMA_PERIPH_NOINCREMENT);
;;;82     
;;;83       LL_DMA_SetMemoryIncMode(DMA2, LL_DMA_STREAM_7, LL_DMA_MEMORY_INCREMENT);
;;;84     
;;;85       LL_DMA_SetPeriphSize(DMA2, LL_DMA_STREAM_7, LL_DMA_PDATAALIGN_BYTE);
;;;86     
;;;87       LL_DMA_SetMemorySize(DMA2, LL_DMA_STREAM_7, LL_DMA_MDATAALIGN_BYTE);
;;;88     
;;;89       LL_DMA_DisableFifoMode(DMA2, LL_DMA_STREAM_7);
;;;90     
;;;91       /* USART1_RX Init */
;;;92       LL_DMA_SetChannelSelection(DMA2, LL_DMA_STREAM_2, LL_DMA_CHANNEL_4);
;;;93     
;;;94       LL_DMA_SetDataTransferDirection(DMA2, LL_DMA_STREAM_2, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
;;;95     
;;;96       LL_DMA_SetStreamPriorityLevel(DMA2, LL_DMA_STREAM_2, LL_DMA_PRIORITY_LOW);
;;;97     
;;;98       LL_DMA_SetMode(DMA2, LL_DMA_STREAM_2, LL_DMA_MODE_NORMAL);
;;;99     
;;;100      LL_DMA_SetPeriphIncMode(DMA2, LL_DMA_STREAM_2, LL_DMA_PERIPH_NOINCREMENT);
;;;101    
;;;102      LL_DMA_SetMemoryIncMode(DMA2, LL_DMA_STREAM_2, LL_DMA_MEMORY_INCREMENT);
;;;103    
;;;104      LL_DMA_SetPeriphSize(DMA2, LL_DMA_STREAM_2, LL_DMA_PDATAALIGN_BYTE);
;;;105    
;;;106      LL_DMA_SetMemorySize(DMA2, LL_DMA_STREAM_2, LL_DMA_MDATAALIGN_BYTE);
;;;107    
;;;108      LL_DMA_DisableFifoMode(DMA2, LL_DMA_STREAM_2);
;;;109    
;;;110      /* USART1 interrupt Init */
;;;111      NVIC_SetPriority(USART1_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
;;;112      NVIC_EnableIRQ(USART1_IRQn);
;;;113    
;;;114      USART_InitStruct.BaudRate = 115200;
;;;115      USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
;;;116      USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
;;;117      USART_InitStruct.Parity = LL_USART_PARITY_NONE;
;;;118      USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
;;;119      USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
;;;120      USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
;;;121      LL_USART_Init(USART1, &USART_InitStruct);
;;;122      LL_USART_ConfigAsyncMode(USART1);
;;;123      LL_USART_Enable(USART1);
;;;124    
;;;125    }
0000c4  4a44              LDR      r2,|L1.472|
0000c6  589b              LDR      r3,[r3,r2]
0000c8  f890c007          LDRB     r12,[r0,#7]
0000cc  f0230304          BIC      r3,r3,#4
0000d0  f84c3002          STR      r3,[r12,r2]
0000d4  7883              LDRB     r3,[r0,#2]
0000d6  58cb              LDR      r3,[r1,r3]
0000d8  f890c002          LDRB     r12,[r0,#2]
0000dc  f0236360          BIC      r3,r3,#0xe000000
0000e0  f0436300          ORR      r3,r3,#0x8000000
0000e4  f841300c          STR      r3,[r1,r12]
0000e8  7883              LDRB     r3,[r0,#2]
0000ea  58cb              LDR      r3,[r1,r3]
0000ec  f890c002          LDRB     r12,[r0,#2]
0000f0  f02303c0          BIC      r3,r3,#0xc0
0000f4  f841300c          STR      r3,[r1,r12]
0000f8  7883              LDRB     r3,[r0,#2]
0000fa  58cb              LDR      r3,[r1,r3]
0000fc  f890c002          LDRB     r12,[r0,#2]
000100  f4233340          BIC      r3,r3,#0x30000
000104  f841300c          STR      r3,[r1,r12]
000108  7883              LDRB     r3,[r0,#2]
00010a  58cb              LDR      r3,[r1,r3]
00010c  f890c002          LDRB     r12,[r0,#2]
000110  f4237390          BIC      r3,r3,#0x120
000114  f841300c          STR      r3,[r1,r12]
000118  7883              LDRB     r3,[r0,#2]
00011a  58cb              LDR      r3,[r1,r3]
00011c  f890c002          LDRB     r12,[r0,#2]
000120  f4237300          BIC      r3,r3,#0x200
000124  f841300c          STR      r3,[r1,r12]
000128  7883              LDRB     r3,[r0,#2]
00012a  58cb              LDR      r3,[r1,r3]
00012c  f890c002          LDRB     r12,[r0,#2]
000130  f4436380          ORR      r3,r3,#0x400
000134  f841300c          STR      r3,[r1,r12]
000138  7883              LDRB     r3,[r0,#2]
00013a  58cb              LDR      r3,[r1,r3]
00013c  f890c002          LDRB     r12,[r0,#2]
000140  f42353c0          BIC      r3,r3,#0x1800
000144  f841300c          STR      r3,[r1,r12]
000148  7883              LDRB     r3,[r0,#2]
00014a  58cb              LDR      r3,[r1,r3]
00014c  f890c002          LDRB     r12,[r0,#2]
000150  f42343c0          BIC      r3,r3,#0x6000
000154  f841300c          STR      r3,[r1,r12]
000158  7881              LDRB     r1,[r0,#2]
00015a  5889              LDR      r1,[r1,r2]
00015c  7880              LDRB     r0,[r0,#2]
00015e  f0210104          BIC      r1,r1,#4
000162  5081              STR      r1,[r0,r2]
000164  481d              LDR      r0,|L1.476|
000166  6800              LDR      r0,[r0,#0]
000168  f3c02002          UBFX     r0,r0,#8,#3
00016c  1d01              ADDS     r1,r0,#4
00016e  2907              CMP      r1,#7
000170  bf34              ITE      CC
000172  2000              MOVCC    r0,#0
000174  1ec0              SUBCS    r0,r0,#3
000176  fa04f000          LSL      r0,r4,r0
00017a  4919              LDR      r1,|L1.480|
00017c  0100              LSLS     r0,r0,#4
00017e  f8810400          STRB     r0,[r1,#0x400]
000182  4918              LDR      r1,|L1.484|
000184  2020              MOVS     r0,#0x20
000186  f8c10100          STR      r0,[r1,#0x100]
00018a  f44f30e1          MOV      r0,#0x1c200           ;114
00018e  e9cd0400          STRD     r0,r4,[sp,#0]         ;114
000192  200c              MOVS     r0,#0xc               ;118
000194  9402              STR      r4,[sp,#8]            ;118
000196  e9cd4003          STRD     r4,r0,[sp,#0xc]       ;118
00019a  9405              STR      r4,[sp,#0x14]         ;120
00019c  9406              STR      r4,[sp,#0x18]         ;121
00019e  4c12              LDR      r4,|L1.488|
0001a0  4669              MOV      r1,sp                 ;121
0001a2  4620              MOV      r0,r4                 ;121
0001a4  f7fffffe          BL       LL_USART_Init
0001a8  6920              LDR      r0,[r4,#0x10]         ;121
0001aa  f4204090          BIC      r0,r0,#0x4800         ;121
0001ae  6120              STR      r0,[r4,#0x10]         ;121
0001b0  6960              LDR      r0,[r4,#0x14]         ;121
0001b2  f020002a          BIC      r0,r0,#0x2a           ;121
0001b6  6160              STR      r0,[r4,#0x14]         ;121
0001b8  68e0              LDR      r0,[r4,#0xc]          ;121
0001ba  f4405000          ORR      r0,r0,#0x2000         ;121
0001be  60e0              STR      r0,[r4,#0xc]          ;121
0001c0  b00e              ADD      sp,sp,#0x38
0001c2  bd10              POP      {r4,pc}
;;;126    /* USART2 init function */
                          ENDP

                  |L1.452|
                          DCD      0x40023844
                  |L1.456|
                          DCD      0x40023830
                  |L1.460|
                          DCD      0x40020400
                  |L1.464|
                          DCD      0x40026400
                  |L1.468|
                          DCD      ||.constdata||
                  |L1.472|
                          DCD      0x40026414
                  |L1.476|
                          DCD      0xe000ed0c
                  |L1.480|
                          DCD      0xe000e025
                  |L1.484|
                          DCD      0xe000e004
                  |L1.488|
                          DCD      0x40011000

                          AREA ||i.MX_USART2_UART_Init||, CODE, READONLY, ALIGN=2

                  MX_USART2_UART_Init PROC
;;;127    
;;;128    void MX_USART2_UART_Init(void)
000000  b510              PUSH     {r4,lr}
;;;129    {
000002  b08e              SUB      sp,sp,#0x38
;;;130      LL_USART_InitTypeDef USART_InitStruct = {0};
000004  2400              MOVS     r4,#0
000006  9401              STR      r4,[sp,#4]
000008  4849              LDR      r0,|L2.304|
00000a  9400              STR      r4,[sp,#0]
;;;131    
;;;132      LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
00000c  9406              STR      r4,[sp,#0x18]
00000e  9402              STR      r4,[sp,#8]            ;130
000010  9403              STR      r4,[sp,#0xc]          ;130
000012  9404              STR      r4,[sp,#0x10]         ;130
000014  9405              STR      r4,[sp,#0x14]         ;130
000016  940b              STR      r4,[sp,#0x2c]         ;130
000018  6801              LDR      r1,[r0,#0]            ;130
00001a  f4413100          ORR      r1,r1,#0x20000        ;130
00001e  6001              STR      r1,[r0,#0]            ;130
000020  6800              LDR      r0,[r0,#0]            ;130
000022  f4003000          AND      r0,r0,#0x20000        ;130
000026  9007              STR      r0,[sp,#0x1c]         ;130
000028  4842              LDR      r0,|L2.308|
00002a  6801              LDR      r1,[r0,#0]            ;130
00002c  f0410108          ORR      r1,r1,#8              ;130
000030  6001              STR      r1,[r0,#0]            ;130
000032  6800              LDR      r0,[r0,#0]            ;130
;;;133      /* Peripheral clock enable */
;;;134      LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_USART2);
;;;135      
;;;136      LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOD);
;;;137      /**USART2 GPIO Configuration  
;;;138      PD5   ------> USART2_TX
;;;139      PD6   ------> USART2_RX 
;;;140      */
;;;141      GPIO_InitStruct.Pin = LL_GPIO_PIN_5|LL_GPIO_PIN_6;
;;;142      GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
;;;143      GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
;;;144      GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
;;;145      GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
;;;146      GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
;;;147      LL_GPIO_Init(GPIOD, &GPIO_InitStruct);
000034  a908              ADD      r1,sp,#0x20
000036  f0000008          AND      r0,r0,#8
00003a  9007              STR      r0,[sp,#0x1c]         ;141
00003c  2060              MOVS     r0,#0x60              ;141
00003e  9008              STR      r0,[sp,#0x20]         ;142
000040  2002              MOVS     r0,#2                 ;142
000042  9009              STR      r0,[sp,#0x24]         ;143
000044  2003              MOVS     r0,#3                 ;143
000046  900a              STR      r0,[sp,#0x28]         ;145
000048  2001              MOVS     r0,#1                 ;145
00004a  900c              STR      r0,[sp,#0x30]         ;146
00004c  2007              MOVS     r0,#7                 ;146
00004e  900d              STR      r0,[sp,#0x34]
000050  4839              LDR      r0,|L2.312|
000052  f7fffffe          BL       LL_GPIO_Init
000056  483a              LDR      r0,|L2.320|
;;;148    
;;;149      /* USART2 DMA Init */
;;;150      
;;;151      /* USART2_TX Init */
;;;152      LL_DMA_SetChannelSelection(DMA1, LL_DMA_STREAM_6, LL_DMA_CHANNEL_4);
000058  4938              LDR      r1,|L2.316|
00005a  7982              LDRB     r2,[r0,#6]
00005c  588a              LDR      r2,[r1,r2]
00005e  7983              LDRB     r3,[r0,#6]
000060  f0226260          BIC      r2,r2,#0xe000000
000064  f0426200          ORR      r2,r2,#0x8000000
000068  50ca              STR      r2,[r1,r3]
00006a  7982              LDRB     r2,[r0,#6]
00006c  588a              LDR      r2,[r1,r2]
00006e  7983              LDRB     r3,[r0,#6]
000070  f02202c0          BIC      r2,r2,#0xc0
000074  f0420240          ORR      r2,r2,#0x40
000078  50ca              STR      r2,[r1,r3]
00007a  7982              LDRB     r2,[r0,#6]
00007c  588a              LDR      r2,[r1,r2]
00007e  7983              LDRB     r3,[r0,#6]
000080  f4223240          BIC      r2,r2,#0x30000
000084  50ca              STR      r2,[r1,r3]
000086  7982              LDRB     r2,[r0,#6]
000088  588a              LDR      r2,[r1,r2]
00008a  7983              LDRB     r3,[r0,#6]
00008c  f4227290          BIC      r2,r2,#0x120
000090  50ca              STR      r2,[r1,r3]
000092  7982              LDRB     r2,[r0,#6]
000094  588a              LDR      r2,[r1,r2]
000096  7983              LDRB     r3,[r0,#6]
000098  f4227200          BIC      r2,r2,#0x200
00009c  50ca              STR      r2,[r1,r3]
00009e  7982              LDRB     r2,[r0,#6]
0000a0  588a              LDR      r2,[r1,r2]
0000a2  7983              LDRB     r3,[r0,#6]
0000a4  f4426280          ORR      r2,r2,#0x400
0000a8  50ca              STR      r2,[r1,r3]
0000aa  7982              LDRB     r2,[r0,#6]
0000ac  588a              LDR      r2,[r1,r2]
0000ae  7983              LDRB     r3,[r0,#6]
0000b0  f42252c0          BIC      r2,r2,#0x1800
0000b4  50ca              STR      r2,[r1,r3]
0000b6  7982              LDRB     r2,[r0,#6]
0000b8  588a              LDR      r2,[r1,r2]
0000ba  7983              LDRB     r3,[r0,#6]
0000bc  f42242c0          BIC      r2,r2,#0x6000
0000c0  50ca              STR      r2,[r1,r3]
0000c2  7982              LDRB     r2,[r0,#6]
;;;153    
;;;154      LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_STREAM_6, LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
;;;155    
;;;156      LL_DMA_SetStreamPriorityLevel(DMA1, LL_DMA_STREAM_6, LL_DMA_PRIORITY_LOW);
;;;157    
;;;158      LL_DMA_SetMode(DMA1, LL_DMA_STREAM_6, LL_DMA_MODE_NORMAL);
;;;159    
;;;160      LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_STREAM_6, LL_DMA_PERIPH_NOINCREMENT);
;;;161    
;;;162      LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_STREAM_6, LL_DMA_MEMORY_INCREMENT);
;;;163    
;;;164      LL_DMA_SetPeriphSize(DMA1, LL_DMA_STREAM_6, LL_DMA_PDATAALIGN_BYTE);
;;;165    
;;;166      LL_DMA_SetMemorySize(DMA1, LL_DMA_STREAM_6, LL_DMA_MDATAALIGN_BYTE);
;;;167    
;;;168      LL_DMA_DisableFifoMode(DMA1, LL_DMA_STREAM_6);
;;;169    
;;;170      /* USART2 interrupt Init */
;;;171      NVIC_SetPriority(USART2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
;;;172      NVIC_EnableIRQ(USART2_IRQn);
;;;173    
;;;174      USART_InitStruct.BaudRate = 115200;
;;;175      USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
;;;176      USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
;;;177      USART_InitStruct.Parity = LL_USART_PARITY_NONE;
;;;178      USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
;;;179      USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
;;;180      USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
;;;181      LL_USART_Init(USART2, &USART_InitStruct);
;;;182      LL_USART_ConfigAsyncMode(USART2);
;;;183      LL_USART_Enable(USART2);
;;;184    
;;;185    }
0000c4  491f              LDR      r1,|L2.324|
0000c6  5852              LDR      r2,[r2,r1]
0000c8  7980              LDRB     r0,[r0,#6]
0000ca  f0220204          BIC      r2,r2,#4
0000ce  5042              STR      r2,[r0,r1]
0000d0  481d              LDR      r0,|L2.328|
0000d2  6800              LDR      r0,[r0,#0]
0000d4  f3c02002          UBFX     r0,r0,#8,#3
0000d8  1d01              ADDS     r1,r0,#4
0000da  2907              CMP      r1,#7
0000dc  bf34              ITE      CC
0000de  2000              MOVCC    r0,#0
0000e0  1ec0              SUBCS    r0,r0,#3
0000e2  fa04f000          LSL      r0,r4,r0
0000e6  4919              LDR      r1,|L2.332|
0000e8  0100              LSLS     r0,r0,#4
0000ea  f8810400          STRB     r0,[r1,#0x400]
0000ee  4918              LDR      r1,|L2.336|
0000f0  2040              MOVS     r0,#0x40
0000f2  f8c10100          STR      r0,[r1,#0x100]
0000f6  f44f30e1          MOV      r0,#0x1c200           ;174
0000fa  e9cd0400          STRD     r0,r4,[sp,#0]         ;174
0000fe  200c              MOVS     r0,#0xc               ;178
000100  9402              STR      r4,[sp,#8]            ;178
000102  e9cd4003          STRD     r4,r0,[sp,#0xc]       ;178
000106  9405              STR      r4,[sp,#0x14]         ;180
000108  9406              STR      r4,[sp,#0x18]         ;181
00010a  4c12              LDR      r4,|L2.340|
00010c  4669              MOV      r1,sp                 ;181
00010e  4620              MOV      r0,r4                 ;181
000110  f7fffffe          BL       LL_USART_Init
000114  6920              LDR      r0,[r4,#0x10]         ;181
000116  f4204090          BIC      r0,r0,#0x4800         ;181
00011a  6120              STR      r0,[r4,#0x10]         ;181
00011c  6960              LDR      r0,[r4,#0x14]         ;181
00011e  f020002a          BIC      r0,r0,#0x2a           ;181
000122  6160              STR      r0,[r4,#0x14]         ;181
000124  68e0              LDR      r0,[r4,#0xc]          ;181
000126  f4405000          ORR      r0,r0,#0x2000         ;181
00012a  60e0              STR      r0,[r4,#0xc]          ;181
00012c  b00e              ADD      sp,sp,#0x38
00012e  bd10              POP      {r4,pc}
;;;186    
                          ENDP

                  |L2.304|
                          DCD      0x40023840
                  |L2.308|
                          DCD      0x40023830
                  |L2.312|
                          DCD      0x40020c00
                  |L2.316|
                          DCD      0x40026000
                  |L2.320|
                          DCD      ||.constdata||
                  |L2.324|
                          DCD      0x40026014
                  |L2.328|
                          DCD      0xe000ed0c
                  |L2.332|
                          DCD      0xe000e026
                  |L2.336|
                          DCD      0xe000e004
                  |L2.340|
                          DCD      0x40004400

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  STREAM_OFFSET_TAB
000000  10284058          DCB      0x10,0x28,0x40,0x58
000004  7088a0b8          DCB      0x70,0x88,0xa0,0xb8

;*** Start embedded assembler ***

#line 1 "../Src/usart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_aa2567c7____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___7_usart_c_aa2567c7____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_aa2567c7____REVSH|
#line 402
|__asm___7_usart_c_aa2567c7____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_aa2567c7____RRX|
#line 587
|__asm___7_usart_c_aa2567c7____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
