; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -ostm32nes\stm32f4xx_ll_exti.o --depend=stm32nes\stm32f4xx_ll_exti.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I../Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I.\RTE\_stm32nes -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F407xx -DUSE_FULL_LL_DRIVER -DSTM32F407xx -DUSE_HAL_DRIVER --omf_browse=stm32nes\stm32f4xx_ll_exti.crf ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_ll_exti.c]
                          THUMB

                          AREA ||i.LL_EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  LL_EXTI_DeInit PROC
;;;95       */
;;;96     uint32_t LL_EXTI_DeInit(void)
000000  4908              LDR      r1,|L1.36|
;;;97     {
;;;98       /* Interrupt mask register set to default reset values */
;;;99       LL_EXTI_WriteReg(IMR,   0x00000000U);
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;100      /* Event mask register set to default reset values */
;;;101      LL_EXTI_WriteReg(EMR,   0x00000000U);
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;102      /* Rising Trigger selection register set to default reset values */
;;;103      LL_EXTI_WriteReg(RTSR,  0x00000000U);
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;104      /* Falling Trigger selection register set to default reset values */
;;;105      LL_EXTI_WriteReg(FTSR,  0x00000000U);
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;106      /* Software interrupt event register set to default reset values */
;;;107      LL_EXTI_WriteReg(SWIER, 0x00000000U);
000012  1d09              ADDS     r1,r1,#4
000014  6008              STR      r0,[r1,#0]
;;;108      /* Pending register set to default reset values */
;;;109      LL_EXTI_WriteReg(PR,    0x00FFFFFFU);
000016  1d09              ADDS     r1,r1,#4
000018  f06f407f          MVN      r0,#0xff000000
00001c  6008              STR      r0,[r1,#0]
;;;110    
;;;111      return SUCCESS;
00001e  2001              MOVS     r0,#1
;;;112    }
000020  4770              BX       lr
;;;113    
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      0x40013c00

                          AREA ||i.LL_EXTI_Init||, CODE, READONLY, ALIGN=2

                  LL_EXTI_Init PROC
;;;120      */
;;;121    uint32_t LL_EXTI_Init(LL_EXTI_InitTypeDef *EXTI_InitStruct)
000000  b410              PUSH     {r4}
000002  4a32              LDR      r2,|L2.204|
;;;122    {
;;;123      ErrorStatus status = SUCCESS;
;;;124      /* Check the parameters */
;;;125      assert_param(IS_LL_EXTI_LINE_0_31(EXTI_InitStruct->Line_0_31));
;;;126      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->LineCommand));
;;;127      assert_param(IS_LL_EXTI_MODE(EXTI_InitStruct->Mode));
;;;128    
;;;129      /* ENABLE LineCommand */
;;;130      if (EXTI_InitStruct->LineCommand != DISABLE)
000004  7904              LDRB     r4,[r0,#4]
000006  1f13              SUBS     r3,r2,#4
000008  6801              LDR      r1,[r0,#0]
00000a  f04f0c01          MOV      r12,#1                ;123
00000e  2c00              CMP      r4,#0
000010  d052              BEQ      |L2.184|
;;;131      {
;;;132        assert_param(IS_LL_EXTI_TRIGGER(EXTI_InitStruct->Trigger));
;;;133    
;;;134        /* Configure EXTI Lines in range from 0 to 31 */
;;;135        if (EXTI_InitStruct->Line_0_31 != LL_EXTI_LINE_NONE)
000012  2900              CMP      r1,#0
000014  d04d              BEQ      |L2.178|
;;;136        {
;;;137          switch (EXTI_InitStruct->Mode)
000016  7944              LDRB     r4,[r0,#5]
000018  b1ac              CBZ      r4,|L2.70|
00001a  2c01              CMP      r4,#1
00001c  d01c              BEQ      |L2.88|
00001e  2c02              CMP      r4,#2
;;;138          {
;;;139            case LL_EXTI_MODE_IT:
;;;140              /* First Disable Event on provided Lines */
;;;141              LL_EXTI_DisableEvent_0_31(EXTI_InitStruct->Line_0_31);
;;;142              /* Then Enable IT on provided Lines */
;;;143              LL_EXTI_EnableIT_0_31(EXTI_InitStruct->Line_0_31);
;;;144              break;
;;;145            case LL_EXTI_MODE_EVENT:
;;;146              /* First Disable IT on provided Lines */
;;;147              LL_EXTI_DisableIT_0_31(EXTI_InitStruct->Line_0_31);
;;;148              /* Then Enable Event on provided Lines */
;;;149              LL_EXTI_EnableEvent_0_31(EXTI_InitStruct->Line_0_31);
;;;150              break;
;;;151            case LL_EXTI_MODE_IT_EVENT:
;;;152              /* Directly Enable IT & Event on provided Lines */
;;;153              LL_EXTI_EnableIT_0_31(EXTI_InitStruct->Line_0_31);
;;;154              LL_EXTI_EnableEvent_0_31(EXTI_InitStruct->Line_0_31);
;;;155              break;
;;;156            default:
;;;157              status = ERROR;
000020  bf18              IT       NE
000022  f04f0c00          MOVNE    r12,#0
000026  d020              BEQ      |L2.106|
                  |L2.40|
;;;158              break;
;;;159          }
;;;160          if (EXTI_InitStruct->Trigger != LL_EXTI_TRIGGER_NONE)
000028  7983              LDRB     r3,[r0,#6]
00002a  2b00              CMP      r3,#0
00002c  d041              BEQ      |L2.178|
00002e  4928              LDR      r1,|L2.208|
000030  1f0a              SUBS     r2,r1,#4
;;;161          {
;;;162            switch (EXTI_InitStruct->Trigger)
000032  2b01              CMP      r3,#1
000034  d021              BEQ      |L2.122|
000036  2b02              CMP      r3,#2
000038  d029              BEQ      |L2.142|
00003a  2b03              CMP      r3,#3
;;;163            {
;;;164              case LL_EXTI_TRIGGER_RISING:
;;;165                /* First Disable Falling Trigger on provided Lines */
;;;166                LL_EXTI_DisableFallingTrig_0_31(EXTI_InitStruct->Line_0_31);
;;;167                /* Then Enable Rising Trigger on provided Lines */
;;;168                LL_EXTI_EnableRisingTrig_0_31(EXTI_InitStruct->Line_0_31);
;;;169                break;
;;;170              case LL_EXTI_TRIGGER_FALLING:
;;;171                /* First Disable Rising Trigger on provided Lines */
;;;172                LL_EXTI_DisableRisingTrig_0_31(EXTI_InitStruct->Line_0_31);
;;;173                /* Then Enable Falling Trigger on provided Lines */
;;;174                LL_EXTI_EnableFallingTrig_0_31(EXTI_InitStruct->Line_0_31);
;;;175                break;
;;;176              case LL_EXTI_TRIGGER_RISING_FALLING:
;;;177                LL_EXTI_EnableRisingTrig_0_31(EXTI_InitStruct->Line_0_31);
;;;178                LL_EXTI_EnableFallingTrig_0_31(EXTI_InitStruct->Line_0_31);
;;;179                break;
;;;180              default:
;;;181                status = ERROR;
00003c  bf18              IT       NE
00003e  f04f0c00          MOVNE    r12,#0
000042  d02e              BEQ      |L2.162|
000044  e035              B        |L2.178|
                  |L2.70|
000046  6814              LDR      r4,[r2,#0]            ;162
000048  ea240101          BIC      r1,r4,r1              ;162
00004c  6011              STR      r1,[r2,#0]            ;162
00004e  6801              LDR      r1,[r0,#0]            ;162
000050  681a              LDR      r2,[r3,#0]            ;162
000052  4311              ORRS     r1,r1,r2              ;162
000054  6019              STR      r1,[r3,#0]            ;162
000056  e7e7              B        |L2.40|
                  |L2.88|
000058  681c              LDR      r4,[r3,#0]            ;144
00005a  ea240101          BIC      r1,r4,r1              ;144
00005e  6019              STR      r1,[r3,#0]            ;144
000060  6801              LDR      r1,[r0,#0]            ;144
000062  6813              LDR      r3,[r2,#0]            ;144
000064  4319              ORRS     r1,r1,r3              ;144
000066  6011              STR      r1,[r2,#0]            ;144
000068  e7de              B        |L2.40|
                  |L2.106|
00006a  681c              LDR      r4,[r3,#0]            ;150
00006c  4321              ORRS     r1,r1,r4              ;150
00006e  6019              STR      r1,[r3,#0]            ;150
000070  6801              LDR      r1,[r0,#0]            ;150
000072  6813              LDR      r3,[r2,#0]            ;150
000074  4319              ORRS     r1,r1,r3              ;150
000076  6011              STR      r1,[r2,#0]            ;150
000078  e7d6              B        |L2.40|
                  |L2.122|
00007a  6803              LDR      r3,[r0,#0]            ;155
00007c  680c              LDR      r4,[r1,#0]            ;155
00007e  ea240303          BIC      r3,r4,r3              ;155
000082  600b              STR      r3,[r1,#0]            ;155
000084  6800              LDR      r0,[r0,#0]            ;168
000086  6811              LDR      r1,[r2,#0]            ;168
000088  4308              ORRS     r0,r0,r1              ;168
                  |L2.138|
00008a  6010              STR      r0,[r2,#0]            ;168
00008c  e011              B        |L2.178|
                  |L2.142|
00008e  6803              LDR      r3,[r0,#0]            ;168
000090  6814              LDR      r4,[r2,#0]            ;168
000092  ea240303          BIC      r3,r4,r3              ;168
000096  6013              STR      r3,[r2,#0]            ;168
000098  6800              LDR      r0,[r0,#0]            ;174
00009a  680a              LDR      r2,[r1,#0]            ;174
00009c  4310              ORRS     r0,r0,r2              ;174
00009e  6008              STR      r0,[r1,#0]            ;174
0000a0  e007              B        |L2.178|
                  |L2.162|
0000a2  6803              LDR      r3,[r0,#0]            ;175
0000a4  6814              LDR      r4,[r2,#0]            ;175
0000a6  4323              ORRS     r3,r3,r4              ;175
0000a8  6013              STR      r3,[r2,#0]            ;175
0000aa  6800              LDR      r0,[r0,#0]            ;178
0000ac  680a              LDR      r2,[r1,#0]            ;178
0000ae  4310              ORRS     r0,r0,r2              ;178
0000b0  6008              STR      r0,[r1,#0]            ;178
                  |L2.178|
;;;182                break;
;;;183            }
;;;184          }
;;;185        }
;;;186      }
;;;187      /* DISABLE LineCommand */
;;;188      else
;;;189      {
;;;190        /* De-configure EXTI Lines in range from 0 to 31 */
;;;191        LL_EXTI_DisableIT_0_31(EXTI_InitStruct->Line_0_31);
;;;192        LL_EXTI_DisableEvent_0_31(EXTI_InitStruct->Line_0_31);
;;;193      }
;;;194      return status;
;;;195    }
0000b2  bc10              POP      {r4}
0000b4  4660              MOV      r0,r12                ;194
0000b6  4770              BX       lr
                  |L2.184|
0000b8  681c              LDR      r4,[r3,#0]
0000ba  ea240101          BIC      r1,r4,r1
0000be  6019              STR      r1,[r3,#0]
0000c0  6800              LDR      r0,[r0,#0]            ;192
0000c2  6811              LDR      r1,[r2,#0]            ;192
0000c4  ea210000          BIC      r0,r1,r0              ;192
0000c8  e7df              B        |L2.138|
;;;196    
                          ENDP

0000ca  0000              DCW      0x0000
                  |L2.204|
                          DCD      0x40013c04
                  |L2.208|
                          DCD      0x40013c0c

                          AREA ||i.LL_EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  LL_EXTI_StructInit PROC
;;;201      */
;;;202    void LL_EXTI_StructInit(LL_EXTI_InitTypeDef *EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;203    {
;;;204      EXTI_InitStruct->Line_0_31      = LL_EXTI_LINE_NONE;
;;;205      EXTI_InitStruct->LineCommand    = DISABLE;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;206      EXTI_InitStruct->Mode           = LL_EXTI_MODE_IT;
000006  7141              STRB     r1,[r0,#5]
;;;207      EXTI_InitStruct->Trigger        = LL_EXTI_TRIGGER_FALLING;
000008  2102              MOVS     r1,#2
00000a  7181              STRB     r1,[r0,#6]
;;;208    }
00000c  4770              BX       lr
;;;209    
                          ENDP


;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_ll_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_ll_exti_c_901bf5d4____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___19_stm32f4xx_ll_exti_c_901bf5d4____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_ll_exti_c_901bf5d4____REVSH|
#line 402
|__asm___19_stm32f4xx_ll_exti_c_901bf5d4____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_ll_exti_c_901bf5d4____RRX|
#line 587
|__asm___19_stm32f4xx_ll_exti_c_901bf5d4____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
