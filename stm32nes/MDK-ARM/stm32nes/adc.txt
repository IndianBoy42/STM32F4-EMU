; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -ostm32nes\adc.o --depend=stm32nes\adc.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I../Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I.\RTE\_stm32nes -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F407xx -DUSE_FULL_LL_DRIVER -DSTM32F407xx -DUSE_HAL_DRIVER --omf_browse=stm32nes\adc.crf ../Src/adc.c]
                          THUMB

                          AREA ||i.MX_ADC1_Init||, CODE, READONLY, ALIGN=2

                  MX_ADC1_Init PROC
;;;47     /* ADC1 init function */
;;;48     void MX_ADC1_Init(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;49     {
000002  b093              SUB      sp,sp,#0x4c
;;;50       LL_ADC_InitTypeDef ADC_InitStruct = {0};
000004  2400              MOVS     r4,#0
;;;51       LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
000006  9412              STR      r4,[sp,#0x48]
000008  9410              STR      r4,[sp,#0x40]         ;50
00000a  9411              STR      r4,[sp,#0x44]         ;50
00000c  9400              STR      r4,[sp,#0]
00000e  9403              STR      r4,[sp,#0xc]
;;;52       LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
000010  9404              STR      r4,[sp,#0x10]
000012  48a8              LDR      r0,|L1.692|
000014  9401              STR      r4,[sp,#4]            ;51
000016  9402              STR      r4,[sp,#8]            ;51
000018  940d              STR      r4,[sp,#0x34]
00001a  940e              STR      r4,[sp,#0x38]
;;;53     
;;;54       LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
00001c  940f              STR      r4,[sp,#0x3c]
00001e  940c              STR      r4,[sp,#0x30]         ;52
000020  9408              STR      r4,[sp,#0x20]
000022  9409              STR      r4,[sp,#0x24]
000024  940a              STR      r4,[sp,#0x28]
000026  940b              STR      r4,[sp,#0x2c]
000028  6801              LDR      r1,[r0,#0]
00002a  f4417180          ORR      r1,r1,#0x100
00002e  6001              STR      r1,[r0,#0]
000030  6800              LDR      r0,[r0,#0]
000032  f4007080          AND      r0,r0,#0x100
000036  9005              STR      r0,[sp,#0x14]
000038  489f              LDR      r0,|L1.696|
00003a  6801              LDR      r1,[r0,#0]
00003c  f0410101          ORR      r1,r1,#1
000040  6001              STR      r1,[r0,#0]
000042  6800              LDR      r0,[r0,#0]
;;;55       /* Peripheral clock enable */
;;;56       LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_ADC1);
;;;57       
;;;58       LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
;;;59       /**ADC1 GPIO Configuration  
;;;60       PA0-WKUP   ------> ADC1_IN0
;;;61       PA1   ------> ADC1_IN1
;;;62       PA2   ------> ADC1_IN2
;;;63       PA3   ------> ADC1_IN3 
;;;64       */
;;;65       GPIO_InitStruct.Pin = Joy1Y_Pin|Joy1X_Pin|Joy2X_Pin|Joy2Y_Pin;
;;;66       GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
;;;67       GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
;;;68       LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000044  a906              ADD      r1,sp,#0x18
000046  f0000001          AND      r0,r0,#1
00004a  9005              STR      r0,[sp,#0x14]         ;65
00004c  200f              MOVS     r0,#0xf               ;65
00004e  9006              STR      r0,[sp,#0x18]         ;66
000050  2003              MOVS     r0,#3                 ;66
000052  9007              STR      r0,[sp,#0x1c]
000054  4899              LDR      r0,|L1.700|
000056  f7fffffe          BL       LL_GPIO_Init
00005a  489a              LDR      r0,|L1.708|
;;;69     
;;;70       /* ADC1 DMA Init */
;;;71       
;;;72       /* ADC1 Init */
;;;73       LL_DMA_SetChannelSelection(DMA2, LL_DMA_STREAM_0, LL_DMA_CHANNEL_0);
00005c  4998              LDR      r1,|L1.704|
00005e  7802              LDRB     r2,[r0,#0]
000060  588a              LDR      r2,[r1,r2]
000062  7803              LDRB     r3,[r0,#0]
000064  f0226260          BIC      r2,r2,#0xe000000
000068  50ca              STR      r2,[r1,r3]
00006a  7802              LDRB     r2,[r0,#0]
00006c  588a              LDR      r2,[r1,r2]
00006e  7803              LDRB     r3,[r0,#0]
000070  f02202c0          BIC      r2,r2,#0xc0
000074  50ca              STR      r2,[r1,r3]
000076  7802              LDRB     r2,[r0,#0]
000078  588a              LDR      r2,[r1,r2]
00007a  7803              LDRB     r3,[r0,#0]
00007c  f4223240          BIC      r2,r2,#0x30000
000080  50ca              STR      r2,[r1,r3]
000082  7802              LDRB     r2,[r0,#0]
000084  588a              LDR      r2,[r1,r2]
000086  7803              LDRB     r3,[r0,#0]
000088  f4227290          BIC      r2,r2,#0x120
00008c  50ca              STR      r2,[r1,r3]
00008e  7802              LDRB     r2,[r0,#0]
000090  588a              LDR      r2,[r1,r2]
000092  7803              LDRB     r3,[r0,#0]
000094  f4227200          BIC      r2,r2,#0x200
000098  50ca              STR      r2,[r1,r3]
00009a  7802              LDRB     r2,[r0,#0]
00009c  588a              LDR      r2,[r1,r2]
00009e  7803              LDRB     r3,[r0,#0]
0000a0  f4426280          ORR      r2,r2,#0x400
0000a4  50ca              STR      r2,[r1,r3]
0000a6  7802              LDRB     r2,[r0,#0]
0000a8  588a              LDR      r2,[r1,r2]
0000aa  7803              LDRB     r3,[r0,#0]
0000ac  f42252c0          BIC      r2,r2,#0x1800
0000b0  f4426200          ORR      r2,r2,#0x800
0000b4  50ca              STR      r2,[r1,r3]
0000b6  7802              LDRB     r2,[r0,#0]
0000b8  588a              LDR      r2,[r1,r2]
0000ba  7803              LDRB     r3,[r0,#0]
0000bc  f42242c0          BIC      r2,r2,#0x6000
0000c0  f4425200          ORR      r2,r2,#0x2000
0000c4  50ca              STR      r2,[r1,r3]
0000c6  7802              LDRB     r2,[r0,#0]
;;;74     
;;;75       LL_DMA_SetDataTransferDirection(DMA2, LL_DMA_STREAM_0, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
;;;76     
;;;77       LL_DMA_SetStreamPriorityLevel(DMA2, LL_DMA_STREAM_0, LL_DMA_PRIORITY_LOW);
;;;78     
;;;79       LL_DMA_SetMode(DMA2, LL_DMA_STREAM_0, LL_DMA_MODE_NORMAL);
;;;80     
;;;81       LL_DMA_SetPeriphIncMode(DMA2, LL_DMA_STREAM_0, LL_DMA_PERIPH_NOINCREMENT);
;;;82     
;;;83       LL_DMA_SetMemoryIncMode(DMA2, LL_DMA_STREAM_0, LL_DMA_MEMORY_INCREMENT);
;;;84     
;;;85       LL_DMA_SetPeriphSize(DMA2, LL_DMA_STREAM_0, LL_DMA_PDATAALIGN_HALFWORD);
;;;86     
;;;87       LL_DMA_SetMemorySize(DMA2, LL_DMA_STREAM_0, LL_DMA_MDATAALIGN_HALFWORD);
;;;88     
;;;89       LL_DMA_DisableFifoMode(DMA2, LL_DMA_STREAM_0);
;;;90     
;;;91       /**Common config 
;;;92       */
;;;93       ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
;;;94       ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
;;;95       ADC_InitStruct.SequencersScanMode = LL_ADC_SEQ_SCAN_ENABLE;
;;;96       LL_ADC_Init(ADC1, &ADC_InitStruct);
;;;97       ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
;;;98       ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS;
;;;99       ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
;;;100      ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_CONTINUOUS;
;;;101      ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_UNLIMITED;
;;;102      LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
;;;103      LL_ADC_REG_SetFlagEndOfConversion(ADC1, LL_ADC_REG_FLAG_EOC_UNITARY_CONV);
;;;104      LL_ADC_DisableIT_EOCS(ADC1);
;;;105      ADC_CommonInitStruct.CommonClock = LL_ADC_CLOCK_SYNC_PCLK_DIV4;
;;;106      ADC_CommonInitStruct.Multimode = LL_ADC_MULTI_INDEPENDENT;
;;;107      LL_ADC_CommonInit(__LL_ADC_COMMON_INSTANCE(ADC1), &ADC_CommonInitStruct);
;;;108      /**Configure Regular Channel 
;;;109      */
;;;110      LL_ADC_REG_SetSequencerRanks(ADC1, LL_ADC_REG_RANK_1, LL_ADC_CHANNEL_0);
;;;111      LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_0, LL_ADC_SAMPLINGTIME_480CYCLES);
;;;112      /**Configure Regular Channel 
;;;113      */
;;;114      LL_ADC_REG_SetSequencerRanks(ADC1, LL_ADC_REG_RANK_2, LL_ADC_CHANNEL_1);
;;;115      LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_1, LL_ADC_SAMPLINGTIME_480CYCLES);
;;;116      /**Configure Regular Channel 
;;;117      */
;;;118      LL_ADC_REG_SetSequencerRanks(ADC1, LL_ADC_REG_RANK_3, LL_ADC_CHANNEL_2);
;;;119      LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_2, LL_ADC_SAMPLINGTIME_480CYCLES);
;;;120      /**Configure Regular Channel 
;;;121      */
;;;122      LL_ADC_REG_SetSequencerRanks(ADC1, LL_ADC_REG_RANK_4, LL_ADC_CHANNEL_3);
;;;123      LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_3, LL_ADC_SAMPLINGTIME_480CYCLES);
;;;124    
;;;125    }
0000c8  497f              LDR      r1,|L1.712|
0000ca  5851              LDR      r1,[r2,r1]
0000cc  487e              LDR      r0,|L1.712|
0000ce  f0210104          BIC      r1,r1,#4
0000d2  5011              STR      r1,[r2,r0]
0000d4  1580              ASRS     r0,r0,#22             ;95
0000d6  9410              STR      r4,[sp,#0x40]         ;96
0000d8  e9cd4011          STRD     r4,r0,[sp,#0x44]      ;96
0000dc  4d7b              LDR      r5,|L1.716|
0000de  a910              ADD      r1,sp,#0x40           ;96
0000e0  4628              MOV      r0,r5                 ;96
0000e2  f7fffffe          BL       LL_ADC_Init
0000e6  f44f1640          MOV      r6,#0x300000          ;98
0000ea  2002              MOVS     r0,#2                 ;100
0000ec  e9cd4002          STRD     r4,r0,[sp,#8]         ;100
0000f0  e9cd4600          STRD     r4,r6,[sp,#0]         ;98
0000f4  1330              ASRS     r0,r6,#12             ;101
0000f6  9004              STR      r0,[sp,#0x10]         ;102
0000f8  4669              MOV      r1,sp                 ;102
0000fa  4628              MOV      r0,r5                 ;102
0000fc  f7fffffe          BL       LL_ADC_REG_Init
000100  68a8              LDR      r0,[r5,#8]            ;102
000102  f4406080          ORR      r0,r0,#0x400          ;102
000106  60a8              STR      r0,[r5,#8]            ;102
000108  6868              LDR      r0,[r5,#4]            ;102
00010a  f0200020          BIC      r0,r0,#0x20           ;102
00010e  6068              STR      r0,[r5,#4]            ;102
000110  f44f3080          MOV      r0,#0x10000           ;105
000114  e9cd040c          STRD     r0,r4,[sp,#0x30]      ;107
000118  a90c              ADD      r1,sp,#0x30           ;107
00011a  486d              LDR      r0,|L1.720|
00011c  f7fffffe          BL       LL_ADC_CommonInit
000120  1568              ASRS     r0,r5,#21
000122  1331              ASRS     r1,r6,#12
000124  fa91f1a1          RBIT     r1,r1
000128  fab1f181          CLZ      r1,r1
00012c  fa20f101          LSR      r1,r0,r1
000130  eb050181          ADD      r1,r5,r1,LSL #2
000134  6aca              LDR      r2,[r1,#0x2c]
000136  f022021f          BIC      r2,r2,#0x1f
00013a  62ca              STR      r2,[r1,#0x2c]
00013c  0401              LSLS     r1,r0,#16
00013e  fa91f2a1          RBIT     r2,r1
000142  fab2f282          CLZ      r2,r2
000146  40d1              LSRS     r1,r1,r2
000148  eb050381          ADD      r3,r5,r1,LSL #2
00014c  f04f71f8          MOV      r1,#0x1f00000
000150  fa91f2a1          RBIT     r2,r1
000154  fab2f282          CLZ      r2,r2
000158  fa24f702          LSR      r7,r4,r2
00015c  2207              MOVS     r2,#7
00015e  f8d3c00c          LDR      r12,[r3,#0xc]
000162  fa02f707          LSL      r7,r2,r7
000166  ea2c0c07          BIC      r12,r12,r7
00016a  fa91f7a1          RBIT     r7,r1
00016e  fab7f787          CLZ      r7,r7
000172  40fc              LSRS     r4,r4,r7
000174  fa02f404          LSL      r4,r2,r4
000178  ea4c0c04          ORR      r12,r12,r4
00017c  f8c3c00c          STR      r12,[r3,#0xc]
000180  1333              ASRS     r3,r6,#12
000182  fa93f3a3          RBIT     r3,r3
000186  fab3f383          CLZ      r3,r3
00018a  fa20f303          LSR      r3,r0,r3
00018e  eb050383          ADD      r3,r5,r3,LSL #2
000192  fa91f4a1          RBIT     r4,r1
000196  f8d3c02c          LDR      r12,[r3,#0x2c]
00019a  fab4f484          CLZ      r4,r4
00019e  f42c7c78          BIC      r12,r12,#0x3e0
0001a2  f04c0c20          ORR      r12,r12,#0x20
0001a6  f8c3c02c          STR      r12,[r3,#0x2c]
0001aa  0403              LSLS     r3,r0,#16
0001ac  fa93fca3          RBIT     r12,r3
0001b0  fabcfc8c          CLZ      r12,r12
0001b4  fa23f30c          LSR      r3,r3,r12
0001b8  eb050383          ADD      r3,r5,r3,LSL #2
0001bc  fa26f404          LSR      r4,r6,r4
0001c0  f8d3c00c          LDR      r12,[r3,#0xc]
0001c4  fa02f404          LSL      r4,r2,r4
0001c8  ea2c0c04          BIC      r12,r12,r4
0001cc  fa91f4a1          RBIT     r4,r1
0001d0  fab4f484          CLZ      r4,r4
0001d4  fa26f404          LSR      r4,r6,r4
0001d8  fa02f404          LSL      r4,r2,r4
0001dc  ea4c0c04          ORR      r12,r12,r4
0001e0  f8c3c00c          STR      r12,[r3,#0xc]
0001e4  1333              ASRS     r3,r6,#12
0001e6  fa93f3a3          RBIT     r3,r3
0001ea  fab3f383          CLZ      r3,r3
0001ee  fa20f303          LSR      r3,r0,r3
0001f2  eb050383          ADD      r3,r5,r3,LSL #2
0001f6  fa91f6a1          RBIT     r6,r1
0001fa  f8d3c02c          LDR      r12,[r3,#0x2c]
0001fe  fab6f686          CLZ      r6,r6
000202  f42c4cf8          BIC      r12,r12,#0x7c00
000206  f44c6c00          ORR      r12,r12,#0x800
00020a  f8c3c02c          STR      r12,[r3,#0x2c]
00020e  0403              LSLS     r3,r0,#16
000210  fa93fca3          RBIT     r12,r3
000214  fabcfc8c          CLZ      r12,r12
000218  fa23f30c          LSR      r3,r3,r12
00021c  eb050383          ADD      r3,r5,r3,LSL #2
000220  f44f0cc0          MOV      r12,#0x600000
000224  fa2cfc06          LSR      r12,r12,r6
000228  68dc              LDR      r4,[r3,#0xc]
00022a  fa02fc0c          LSL      r12,r2,r12
00022e  ea24040c          BIC      r4,r4,r12
000232  fa91f6a1          RBIT     r6,r1
000236  f44f0cc0          MOV      r12,#0x600000
00023a  fab6f686          CLZ      r6,r6
00023e  fa2cfc06          LSR      r12,r12,r6
000242  fa02fc0c          LSL      r12,r2,r12
000246  ea440c0c          ORR      r12,r4,r12
00024a  f8c3c00c          STR      r12,[r3,#0xc]
00024e  f44f7340          MOV      r3,#0x300
000252  fa93f3a3          RBIT     r3,r3
000256  fab3f383          CLZ      r3,r3
00025a  40d8              LSRS     r0,r0,r3
00025c  eb050080          ADD      r0,r5,r0,LSL #2
000260  fa91f4a1          RBIT     r4,r1
000264  6ac3              LDR      r3,[r0,#0x2c]
000266  fab4f484          CLZ      r4,r4
00026a  f4232378          BIC      r3,r3,#0xf8000
00026e  f44333c0          ORR      r3,r3,#0x18000
000272  62c3              STR      r3,[r0,#0x2c]
000274  f04f7000          MOV      r0,#0x2000000
000278  fa90f3a0          RBIT     r3,r0
00027c  fab3f383          CLZ      r3,r3
000280  40d8              LSRS     r0,r0,r3
000282  01eb              LSLS     r3,r5,#7
000284  eb050080          ADD      r0,r5,r0,LSL #2
000288  fa91f1a1          RBIT     r1,r1
00028c  fa23f404          LSR      r4,r3,r4
000290  f8d0c00c          LDR      r12,[r0,#0xc]
000294  fab1f181          CLZ      r1,r1
000298  fa02f404          LSL      r4,r2,r4
00029c  fa23f101          LSR      r1,r3,r1
0002a0  ea2c0c04          BIC      r12,r12,r4
0002a4  fa02f101          LSL      r1,r2,r1
0002a8  ea4c0101          ORR      r1,r12,r1
0002ac  60c1              STR      r1,[r0,#0xc]
0002ae  b013              ADD      sp,sp,#0x4c
0002b0  bdf0              POP      {r4-r7,pc}
;;;126    
                          ENDP

0002b2  0000              DCW      0x0000
                  |L1.692|
                          DCD      0x40023844
                  |L1.696|
                          DCD      0x40023830
                  |L1.700|
                          DCD      0x40020000
                  |L1.704|
                          DCD      0x40026400
                  |L1.708|
                          DCD      ||.constdata||
                  |L1.712|
                          DCD      0x40026414
                  |L1.716|
                          DCD      0x40012000
                  |L1.720|
                          DCD      0x40012300

                          AREA ||i.joystick_init||, CODE, READONLY, ALIGN=2

                  joystick_init PROC
;;;128    Joysticks joys = {0};
;;;129    void joystick_init(void) {
000000  491c              LDR      r1,|L2.116|
000002  b430              PUSH     {r4,r5}
000004  6888              LDR      r0,[r1,#8]
000006  f4407040          ORR      r0,r0,#0x300
00000a  6088              STR      r0,[r1,#8]
00000c  481b              LDR      r0,|L2.124|
;;;130      LL_ADC_REG_SetDMATransfer(ADC1, LL_ADC_REG_DMA_TRANSFER_UNLIMITED);
;;;131      LL_DMA_SetMode(DMA2,LL_DMA_STREAM_0, LL_DMA_MODE_CIRCULAR);
00000e  4a1a              LDR      r2,|L2.120|
000010  7803              LDRB     r3,[r0,#0]
000012  58d3              LDR      r3,[r2,r3]
000014  f890c000          LDRB     r12,[r0,#0]
000018  f4237390          BIC      r3,r3,#0x120
00001c  f4437380          ORR      r3,r3,#0x100
000020  f842300c          STR      r3,[r2,r12]
000024  f890c000          LDRB     r12,[r0,#0]
000028  1d13              ADDS     r3,r2,#4
00002a  f85cc003          LDR      r12,[r12,r3]
00002e  7804              LDRB     r4,[r0,#0]
000030  f36f0c0f          BFC      r12,#0,#16
000034  f04c0c04          ORR      r12,r12,#4
000038  f844c003          STR      r12,[r4,r3]
00003c  7804              LDRB     r4,[r0,#0]
00003e  4d12              LDR      r5,|L2.136|
;;;132      LL_DMA_SetDataLength(DMA2,LL_DMA_STREAM_0, 4);
;;;133      LL_DMA_ConfigAddresses(DMA2,LL_DMA_STREAM_0,
;;;134        LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
;;;135        (uint32_t)&joys,
;;;136        LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
;;;137      LL_DMA_EnableStream(DMA2,LL_DMA_STREAM_0);
;;;138      LL_ADC_Enable(ADC1);
;;;139      LL_ADC_REG_StartConversionSWStart(ADC1);
;;;140    }
000040  f8dfc03c          LDR      r12,|L2.128|
000044  4b0f              LDR      r3,|L2.132|
000046  f844c005          STR      r12,[r4,r5]           ;133
00004a  7804              LDRB     r4,[r0,#0]            ;133
00004c  f1050c04          ADD      r12,r5,#4
000050  f844300c          STR      r3,[r4,r12]
000054  7803              LDRB     r3,[r0,#0]
000056  58d3              LDR      r3,[r2,r3]
000058  7800              LDRB     r0,[r0,#0]
00005a  f0430301          ORR      r3,r3,#1
00005e  5013              STR      r3,[r2,r0]
000060  6888              LDR      r0,[r1,#8]
000062  f0400001          ORR      r0,r0,#1
000066  6088              STR      r0,[r1,#8]
000068  6888              LDR      r0,[r1,#8]
00006a  f0404080          ORR      r0,r0,#0x40000000
00006e  6088              STR      r0,[r1,#8]
000070  bc30              POP      {r4,r5}
000072  4770              BX       lr
;;;141    /* USER CODE END 1 */
                          ENDP

                  |L2.116|
                          DCD      0x40012000
                  |L2.120|
                          DCD      0x40026400
                  |L2.124|
                          DCD      ||.constdata||
                  |L2.128|
                          DCD      0x4001204c
                  |L2.132|
                          DCD      ||.data||
                  |L2.136|
                          DCD      0x40026408

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  STREAM_OFFSET_TAB
000000  10284058          DCB      0x10,0x28,0x40,0x58
000004  7088a0b8          DCB      0x70,0x88,0xa0,0xb8

                          AREA ||.data||, DATA, ALIGN=1

                  joys
000000  00000000          DCW      0x0000,0x0000
000004  00000000          DCW      0x0000,0x0000

;*** Start embedded assembler ***

#line 1 "../Src/adc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_adc_c_7cc13d26____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___5_adc_c_7cc13d26____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_adc_c_7cc13d26____REVSH|
#line 402
|__asm___5_adc_c_7cc13d26____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_adc_c_7cc13d26____RRX|
#line 587
|__asm___5_adc_c_7cc13d26____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
