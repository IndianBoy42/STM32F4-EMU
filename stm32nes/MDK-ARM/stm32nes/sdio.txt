; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -ostm32nes\sdio.o --depend=stm32nes\sdio.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I../Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I.\RTE\_stm32nes -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F407xx -DUSE_FULL_LL_DRIVER -DSTM32F407xx -DUSE_HAL_DRIVER --omf_browse=stm32nes\sdio.crf ../Src/sdio.c]
                          THUMB

                          AREA ||i.HAL_SD_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_SD_MspDeInit PROC
;;;142    
;;;143    void HAL_SD_MspDeInit(SD_HandleTypeDef* sdHandle)
000000  b510              PUSH     {r4,lr}
;;;144    {
000002  4604              MOV      r4,r0
;;;145    
;;;146      if(sdHandle->Instance==SDIO)
000004  6800              LDR      r0,[r0,#0]
000006  f1a04180          SUB      r1,r0,#0x40000000
00000a  f5b13196          SUBS     r1,r1,#0x12c00
;;;147      {
;;;148      /* USER CODE BEGIN SDIO_MspDeInit 0 */
;;;149    
;;;150      /* USER CODE END SDIO_MspDeInit 0 */
;;;151        /* Peripheral clock disable */
;;;152        __HAL_RCC_SDIO_CLK_DISABLE();
;;;153      
;;;154        /**SDIO GPIO Configuration    
;;;155        PC8     ------> SDIO_D0
;;;156        PC9     ------> SDIO_D1
;;;157        PC10     ------> SDIO_D2
;;;158        PC11     ------> SDIO_D3
;;;159        PC12     ------> SDIO_CK
;;;160        PD2     ------> SDIO_CMD 
;;;161        */
;;;162        HAL_GPIO_DeInit(GPIOC, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11 
;;;163                              |GPIO_PIN_12);
;;;164    
;;;165        HAL_GPIO_DeInit(GPIOD, GPIO_PIN_2);
;;;166    
;;;167        /* SDIO DMA DeInit */
;;;168        HAL_DMA_DeInit(sdHandle->hdmarx);
;;;169        HAL_DMA_DeInit(sdHandle->hdmatx);
;;;170      /* USER CODE BEGIN SDIO_MspDeInit 1 */
;;;171    
;;;172      /* USER CODE END SDIO_MspDeInit 1 */
;;;173      }
;;;174    } 
00000e  bf18              IT       NE
000010  bd10              POPNE    {r4,pc}
000012  480b              LDR      r0,|L1.64|
000014  6801              LDR      r1,[r0,#0]            ;152
000016  f4216100          BIC      r1,r1,#0x800          ;152
00001a  6001              STR      r1,[r0,#0]            ;152
00001c  f44f51f8          MOV      r1,#0x1f00            ;162
000020  4808              LDR      r0,|L1.68|
000022  f7fffffe          BL       HAL_GPIO_DeInit
000026  2104              MOVS     r1,#4                 ;165
000028  4807              LDR      r0,|L1.72|
00002a  f7fffffe          BL       HAL_GPIO_DeInit
00002e  6be0              LDR      r0,[r4,#0x3c]         ;168
000030  f7fffffe          BL       HAL_DMA_DeInit
000034  6c20              LDR      r0,[r4,#0x40]         ;169
000036  e8bd4010          POP      {r4,lr}               ;169
00003a  f7ffbffe          B.W      HAL_DMA_DeInit
;;;175    
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
                          DCD      0x40023844
                  |L1.68|
                          DCD      0x40020800
                  |L1.72|
                          DCD      0x40020c00

                          AREA ||i.HAL_SD_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_SD_MspInit PROC
;;;72     
;;;73     void HAL_SD_MspInit(SD_HandleTypeDef* sdHandle)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;74     {
000004  b087              SUB      sp,sp,#0x1c
;;;75     
;;;76       GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2600              MOVS     r6,#0
000008  4605              MOV      r5,r0                 ;74
00000a  9600              STR      r6,[sp,#0]
00000c  9601              STR      r6,[sp,#4]
00000e  9602              STR      r6,[sp,#8]
000010  9603              STR      r6,[sp,#0xc]
;;;77       if(sdHandle->Instance==SDIO)
000012  9604              STR      r6,[sp,#0x10]
000014  6800              LDR      r0,[r0,#0]
000016  f1a04180          SUB      r1,r0,#0x40000000
00001a  f5b13196          SUBS     r1,r1,#0x12c00
;;;78       {
;;;79       /* USER CODE BEGIN SDIO_MspInit 0 */
;;;80     
;;;81       /* USER CODE END SDIO_MspInit 0 */
;;;82         /* SDIO clock enable */
;;;83         __HAL_RCC_SDIO_CLK_ENABLE();
;;;84       
;;;85         __HAL_RCC_GPIOC_CLK_ENABLE();
;;;86         __HAL_RCC_GPIOD_CLK_ENABLE();
;;;87         /**SDIO GPIO Configuration    
;;;88         PC8     ------> SDIO_D0
;;;89         PC9     ------> SDIO_D1
;;;90         PC10     ------> SDIO_D2
;;;91         PC11     ------> SDIO_D3
;;;92         PC12     ------> SDIO_CK
;;;93         PD2     ------> SDIO_CMD 
;;;94         */
;;;95         GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11 
;;;96                               |GPIO_PIN_12;
;;;97         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;98         GPIO_InitStruct.Pull = GPIO_NOPULL;
;;;99         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
;;;100        GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
;;;101        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
;;;102    
;;;103        GPIO_InitStruct.Pin = GPIO_PIN_2;
;;;104        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;105        GPIO_InitStruct.Pull = GPIO_NOPULL;
;;;106        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
;;;107        GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
;;;108        HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
;;;109    
;;;110        /* SDIO DMA Init */
;;;111        /* SDIO Init */
;;;112        hdma_sdio.Instance = DMA2_Stream6;
;;;113        hdma_sdio.Init.Channel = DMA_CHANNEL_4;
;;;114        hdma_sdio.Init.Direction = DMA_PERIPH_TO_MEMORY;
;;;115        hdma_sdio.Init.PeriphInc = DMA_PINC_DISABLE;
;;;116        hdma_sdio.Init.MemInc = DMA_MINC_ENABLE;
;;;117        hdma_sdio.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
;;;118        hdma_sdio.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
;;;119        hdma_sdio.Init.Mode = DMA_PFCTRL;
;;;120        hdma_sdio.Init.Priority = DMA_PRIORITY_HIGH;
;;;121        hdma_sdio.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
;;;122        hdma_sdio.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
;;;123        hdma_sdio.Init.MemBurst = DMA_MBURST_INC4;
;;;124        hdma_sdio.Init.PeriphBurst = DMA_PBURST_INC4;
;;;125        if (HAL_DMA_Init(&hdma_sdio) != HAL_OK)
;;;126        {
;;;127          Error_Handler();
;;;128        }
;;;129    
;;;130        /* Several peripheral DMA handle pointers point to the same DMA handle.
;;;131         Be aware that there is only one stream to perform all the requested DMAs. */
;;;132        /* Be sure to change transfer direction before calling
;;;133         HAL_SD_ReadBlocks_DMA or HAL_SD_WriteBlocks_DMA. */
;;;134        __HAL_LINKDMA(sdHandle,hdmarx,hdma_sdio);
;;;135        __HAL_LINKDMA(sdHandle,hdmatx,hdma_sdio);
;;;136    
;;;137      /* USER CODE BEGIN SDIO_MspInit 1 */
;;;138    
;;;139      /* USER CODE END SDIO_MspInit 1 */
;;;140      }
;;;141    }
00001e  bf1c              ITT      NE
000020  b007              ADDNE    sp,sp,#0x1c
000022  e8bd83f0          POPNE    {r4-r9,pc}
000026  482c              LDR      r0,|L2.216|
000028  6801              LDR      r1,[r0,#0]            ;83
00002a  f4416100          ORR      r1,r1,#0x800          ;83
00002e  6001              STR      r1,[r0,#0]            ;83
000030  6800              LDR      r0,[r0,#0]            ;83
000032  f4006000          AND      r0,r0,#0x800          ;83
000036  9005              STR      r0,[sp,#0x14]         ;85
000038  4828              LDR      r0,|L2.220|
00003a  6801              LDR      r1,[r0,#0]            ;85
00003c  f0410104          ORR      r1,r1,#4              ;85
000040  6001              STR      r1,[r0,#0]            ;85
000042  6801              LDR      r1,[r0,#0]            ;85
000044  f0010104          AND      r1,r1,#4              ;85
000048  9105              STR      r1,[sp,#0x14]         ;86
00004a  6801              LDR      r1,[r0,#0]            ;86
00004c  f0410108          ORR      r1,r1,#8              ;86
000050  6001              STR      r1,[r0,#0]            ;86
000052  6800              LDR      r0,[r0,#0]            ;86
000054  2402              MOVS     r4,#2                 ;97
000056  f0000008          AND      r0,r0,#8              ;86
00005a  9005              STR      r0,[sp,#0x14]         ;95
00005c  f44f50f8          MOV      r0,#0x1f00            ;95
000060  e9cd0400          STRD     r0,r4,[sp,#0]         ;101
000064  2703              MOVS     r7,#3                 ;99
000066  f04f090c          MOV      r9,#0xc               ;100
00006a  e9cd7903          STRD     r7,r9,[sp,#0xc]       ;101
00006e  4669              MOV      r1,sp                 ;101
000070  481b              LDR      r0,|L2.224|
000072  f7fffffe          BL       HAL_GPIO_Init
000076  f04f0804          MOV      r8,#4                 ;103
00007a  aa01              ADD      r2,sp,#4              ;108
00007c  f8cd8000          STR      r8,[sp,#0]            ;108
000080  e88202d0          STM      r2,{r4,r6,r7,r9}      ;108
000084  4669              MOV      r1,sp                 ;108
000086  4817              LDR      r0,|L2.228|
000088  f7fffffe          BL       HAL_GPIO_Init
00008c  4c17              LDR      r4,|L2.236|
00008e  4816              LDR      r0,|L2.232|
000090  6020              STR      r0,[r4,#0]            ;113  ; hdma_sdio
000092  f04f6000          MOV      r0,#0x8000000         ;113
000096  e9c40601          STRD     r0,r6,[r4,#4]         ;113
00009a  1440              ASRS     r0,r0,#17             ;116
00009c  e9c46003          STRD     r6,r0,[r4,#0xc]       ;116
0000a0  0080              LSLS     r0,r0,#2              ;117
0000a2  6160              STR      r0,[r4,#0x14]         ;118  ; hdma_sdio
0000a4  0080              LSLS     r0,r0,#2              ;118
0000a6  61a0              STR      r0,[r4,#0x18]         ;119  ; hdma_sdio
0000a8  2020              MOVS     r0,#0x20              ;119
0000aa  61e0              STR      r0,[r4,#0x1c]         ;120  ; hdma_sdio
0000ac  0300              LSLS     r0,r0,#12             ;120
0000ae  e9c40808          STRD     r0,r8,[r4,#0x20]      ;120
0000b2  0180              LSLS     r0,r0,#6              ;123
0000b4  e9c4700a          STRD     r7,r0,[r4,#0x28]      ;123
0000b8  1080              ASRS     r0,r0,#2              ;124
0000ba  6320              STR      r0,[r4,#0x30]         ;125  ; hdma_sdio
0000bc  4620              MOV      r0,r4                 ;125
0000be  f7fffffe          BL       HAL_DMA_Init
0000c2  2800              CMP      r0,#0                 ;125
0000c4  bf18              IT       NE                    ;127
0000c6  f7fffffe          BLNE     Error_Handler
0000ca  63ec              STR      r4,[r5,#0x3c]         ;135
0000cc  642c              STR      r4,[r5,#0x40]         ;135
0000ce  63a5              STR      r5,[r4,#0x38]         ;135  ; hdma_sdio
0000d0  b007              ADD      sp,sp,#0x1c
0000d2  e8bd83f0          POP      {r4-r9,pc}
;;;142    
                          ENDP

0000d6  0000              DCW      0x0000
                  |L2.216|
                          DCD      0x40023844
                  |L2.220|
                          DCD      0x40023830
                  |L2.224|
                          DCD      0x40020800
                  |L2.228|
                          DCD      0x40020c00
                  |L2.232|
                          DCD      0x400264a0
                  |L2.236|
                          DCD      ||.bss||+0x84

                          AREA ||i.MX_SDIO_SD_Init||, CODE, READONLY, ALIGN=2

                  MX_SDIO_SD_Init PROC
;;;51     
;;;52     void MX_SDIO_SD_Init(void)
000000  480f              LDR      r0,|L3.64|
;;;53     {
000002  b510              PUSH     {r4,lr}
;;;54     
;;;55       hsd.Instance = SDIO;
000004  490d              LDR      r1,|L3.60|
;;;56       hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
000006  6001              STR      r1,[r0,#0]  ; hsd
000008  2100              MOVS     r1,#0
;;;57       hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
00000a  6041              STR      r1,[r0,#4]  ; hsd
;;;58       hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
00000c  6081              STR      r1,[r0,#8]  ; hsd
;;;59       hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
00000e  60c1              STR      r1,[r0,#0xc]  ; hsd
;;;60       hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
000010  6101              STR      r1,[r0,#0x10]  ; hsd
;;;61       hsd.Init.ClockDiv = 0;
000012  6141              STR      r1,[r0,#0x14]  ; hsd
;;;62       if (HAL_SD_Init(&hsd) != HAL_OK)
000014  6181              STR      r1,[r0,#0x18]  ; hsd
000016  f7fffffe          BL       HAL_SD_Init
00001a  2800              CMP      r0,#0
;;;63       {
;;;64         Error_Handler();
00001c  bf18              IT       NE
00001e  f7fffffe          BLNE     Error_Handler
;;;65       }
;;;66       if (HAL_SD_ConfigWideBusOperation(&hsd, SDIO_BUS_WIDE_4B) != HAL_OK)
000022  f44f6100          MOV      r1,#0x800
000026  4806              LDR      r0,|L3.64|
000028  f7fffffe          BL       HAL_SD_ConfigWideBusOperation
00002c  2800              CMP      r0,#0                 ;62
;;;67       {
;;;68         Error_Handler();
;;;69       }
;;;70     
;;;71     }
00002e  bf08              IT       EQ
000030  bd10              POPEQ    {r4,pc}
000032  e8bd4010          POP      {r4,lr}               ;68
000036  f7ffbffe          B.W      Error_Handler
;;;72     
                          ENDP

00003a  0000              DCW      0x0000
                  |L3.60|
                          DCD      0x40012c00
                  |L3.64|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  hsd
                          %        132
                  hdma_sdio
                          %        96

;*** Start embedded assembler ***

#line 1 "../Src/sdio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_sdio_c_62cda922____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___6_sdio_c_62cda922____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_sdio_c_62cda922____REVSH|
#line 402
|__asm___6_sdio_c_62cda922____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_sdio_c_62cda922____RRX|
#line 587
|__asm___6_sdio_c_62cda922____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
