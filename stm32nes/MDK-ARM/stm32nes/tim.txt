; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -ostm32nes\tim.o --depend=stm32nes\tim.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I../Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I.\RTE\_stm32nes -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\FieryDragon\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F407xx -DUSE_FULL_LL_DRIVER -DSTM32F407xx -DUSE_HAL_DRIVER --omf_browse=stm32nes\tim.crf ../Src/tim.c]
                          THUMB

                          AREA ||i.MX_TIM10_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM10_Init PROC
;;;99     /* TIM10 init function */
;;;100    void MX_TIM10_Init(void)
000000  b500              PUSH     {lr}
;;;101    {
000002  b087              SUB      sp,sp,#0x1c
;;;102      LL_TIM_InitTypeDef TIM_InitStruct = {0};
000004  2100              MOVS     r1,#0
000006  480b              LDR      r0,|L1.52|
000008  9100              STR      r1,[sp,#0]
00000a  9101              STR      r1,[sp,#4]
00000c  9102              STR      r1,[sp,#8]
00000e  9103              STR      r1,[sp,#0xc]
000010  9104              STR      r1,[sp,#0x10]
000012  6802              LDR      r2,[r0,#0]
000014  f4423200          ORR      r2,r2,#0x20000
000018  6002              STR      r2,[r0,#0]
00001a  6800              LDR      r0,[r0,#0]
00001c  f4003000          AND      r0,r0,#0x20000
;;;103    
;;;104      /* Peripheral clock enable */
;;;105      LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_TIM10);
;;;106    
;;;107      TIM_InitStruct.Prescaler = 0;
000020  9005              STR      r0,[sp,#0x14]
000022  f8ad1000          STRH     r1,[sp,#0]
;;;108      TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
;;;109      TIM_InitStruct.Autoreload = 0;
;;;110      TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
;;;111      LL_TIM_Init(TIM10, &TIM_InitStruct);
000026  4669              MOV      r1,sp
000028  4803              LDR      r0,|L1.56|
00002a  f7fffffe          BL       LL_TIM_Init
;;;112    
;;;113    }
00002e  b007              ADD      sp,sp,#0x1c
000030  bd00              POP      {pc}
;;;114    /* TIM11 init function */
                          ENDP

000032  0000              DCW      0x0000
                  |L1.52|
                          DCD      0x40023844
                  |L1.56|
                          DCD      0x40014400

                          AREA ||i.MX_TIM11_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM11_Init PROC
;;;114    /* TIM11 init function */
;;;115    void MX_TIM11_Init(void)
000000  b500              PUSH     {lr}
;;;116    {
000002  b087              SUB      sp,sp,#0x1c
;;;117      LL_TIM_InitTypeDef TIM_InitStruct = {0};
000004  2100              MOVS     r1,#0
000006  480b              LDR      r0,|L2.52|
000008  9100              STR      r1,[sp,#0]
00000a  9101              STR      r1,[sp,#4]
00000c  9102              STR      r1,[sp,#8]
00000e  9103              STR      r1,[sp,#0xc]
000010  9104              STR      r1,[sp,#0x10]
000012  6802              LDR      r2,[r0,#0]
000014  f4422280          ORR      r2,r2,#0x40000
000018  6002              STR      r2,[r0,#0]
00001a  6800              LDR      r0,[r0,#0]
00001c  f4002080          AND      r0,r0,#0x40000
;;;118    
;;;119      /* Peripheral clock enable */
;;;120      LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_TIM11);
;;;121    
;;;122      TIM_InitStruct.Prescaler = 0;
000020  9005              STR      r0,[sp,#0x14]
000022  f8ad1000          STRH     r1,[sp,#0]
;;;123      TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
;;;124      TIM_InitStruct.Autoreload = 0;
;;;125      TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
;;;126      LL_TIM_Init(TIM11, &TIM_InitStruct);
000026  4669              MOV      r1,sp
000028  4803              LDR      r0,|L2.56|
00002a  f7fffffe          BL       LL_TIM_Init
;;;127    
;;;128    }
00002e  b007              ADD      sp,sp,#0x1c
000030  bd00              POP      {pc}
;;;129    /* TIM12 init function */
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x40023844
                  |L2.56|
                          DCD      0x40014800

                          AREA ||i.MX_TIM12_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM12_Init PROC
;;;129    /* TIM12 init function */
;;;130    void MX_TIM12_Init(void)
000000  b510              PUSH     {r4,lr}
;;;131    {
000002  b086              SUB      sp,sp,#0x18
;;;132      LL_TIM_InitTypeDef TIM_InitStruct = {0};
000004  2100              MOVS     r1,#0
000006  480e              LDR      r0,|L3.64|
000008  9100              STR      r1,[sp,#0]
00000a  9101              STR      r1,[sp,#4]
00000c  9102              STR      r1,[sp,#8]
00000e  9103              STR      r1,[sp,#0xc]
000010  9104              STR      r1,[sp,#0x10]
000012  6802              LDR      r2,[r0,#0]
000014  f0420240          ORR      r2,r2,#0x40
000018  6002              STR      r2,[r0,#0]
00001a  6800              LDR      r0,[r0,#0]
;;;133    
;;;134      /* Peripheral clock enable */
;;;135      LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM12);
;;;136    
;;;137      TIM_InitStruct.Prescaler = 0;
;;;138      TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
;;;139      TIM_InitStruct.Autoreload = 0;
;;;140      TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
;;;141      LL_TIM_Init(TIM12, &TIM_InitStruct);
00001c  4c09              LDR      r4,|L3.68|
00001e  f0000040          AND      r0,r0,#0x40
000022  9005              STR      r0,[sp,#0x14]         ;137
000024  f8ad1000          STRH     r1,[sp,#0]            ;137
000028  4669              MOV      r1,sp
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       LL_TIM_Init
000030  68a0              LDR      r0,[r4,#8]
000032  f0200007          BIC      r0,r0,#7
000036  f4204080          BIC      r0,r0,#0x4000
00003a  60a0              STR      r0,[r4,#8]
;;;142      LL_TIM_SetClockSource(TIM12, LL_TIM_CLOCKSOURCE_INTERNAL);
;;;143    
;;;144    }
00003c  b006              ADD      sp,sp,#0x18
00003e  bd10              POP      {r4,pc}
;;;145    /* TIM13 init function */
                          ENDP

                  |L3.64|
                          DCD      0x40023840
                  |L3.68|
                          DCD      0x40001800

                          AREA ||i.MX_TIM13_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM13_Init PROC
;;;145    /* TIM13 init function */
;;;146    void MX_TIM13_Init(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;147    {
000004  b094              SUB      sp,sp,#0x50
;;;148      LL_TIM_InitTypeDef TIM_InitStruct = {0};
000006  2400              MOVS     r4,#0
000008  940f              STR      r4,[sp,#0x3c]
00000a  9410              STR      r4,[sp,#0x40]
00000c  9411              STR      r4,[sp,#0x44]
;;;149      LL_TIM_OC_InitTypeDef TIM_OC_InitStruct = {0};
00000e  9412              STR      r4,[sp,#0x48]
000010  940e              STR      r4,[sp,#0x38]         ;148
000012  9400              STR      r4,[sp,#0]
000014  9401              STR      r4,[sp,#4]
000016  9402              STR      r4,[sp,#8]
000018  9403              STR      r4,[sp,#0xc]
00001a  4833              LDR      r0,|L4.232|
00001c  9404              STR      r4,[sp,#0x10]
00001e  9405              STR      r4,[sp,#0x14]
000020  9406              STR      r4,[sp,#0x18]
;;;150    
;;;151      LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
000022  9407              STR      r4,[sp,#0x1c]
000024  9408              STR      r4,[sp,#0x20]
000026  9409              STR      r4,[sp,#0x24]
000028  940a              STR      r4,[sp,#0x28]
00002a  940b              STR      r4,[sp,#0x2c]
00002c  940c              STR      r4,[sp,#0x30]
00002e  940d              STR      r4,[sp,#0x34]
000030  6801              LDR      r1,[r0,#0]
000032  f0410180          ORR      r1,r1,#0x80
000036  6001              STR      r1,[r0,#0]
000038  6800              LDR      r0,[r0,#0]
00003a  f0000080          AND      r0,r0,#0x80
00003e  9013              STR      r0,[sp,#0x4c]
000040  482a              LDR      r0,|L4.236|
000042  6800              LDR      r0,[r0,#0]
000044  f3c02002          UBFX     r0,r0,#8,#3
000048  1d01              ADDS     r1,r0,#4
00004a  2907              CMP      r1,#7
00004c  bf34              ITE      CC
00004e  2000              MOVCC    r0,#0
000050  1ec0              SUBCS    r0,r0,#3
000052  fa04f000          LSL      r0,r4,r0
000056  4926              LDR      r1,|L4.240|
000058  0100              LSLS     r0,r0,#4
00005a  f8810400          STRB     r0,[r1,#0x400]
00005e  4925              LDR      r1,|L4.244|
000060  f44f5080          MOV      r0,#0x1000
000064  2704              MOVS     r7,#4
000066  f8c10100          STR      r0,[r1,#0x100]
;;;152      /* Peripheral clock enable */
;;;153      LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM13);
;;;154    
;;;155      /* TIM13 interrupt Init */
;;;156      NVIC_SetPriority(TIM8_UP_TIM13_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
;;;157      NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
;;;158    
;;;159      TIM_InitStruct.Prescaler = 0;
;;;160      TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
;;;161      TIM_InitStruct.Autoreload = 0;
;;;162      TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
;;;163      LL_TIM_Init(TIM13, &TIM_InitStruct);
00006a  f8df808c          LDR      r8,|L4.248|
00006e  f8ad4038          STRH     r4,[sp,#0x38]         ;159
000072  a90e              ADD      r1,sp,#0x38
000074  4640              MOV      r0,r8
000076  f7fffffe          BL       LL_TIM_Init
00007a  4820              LDR      r0,|L4.252|
00007c  4e21              LDR      r6,|L4.260|
00007e  2208              MOVS     r2,#8
000080  7801              LDRB     r1,[r0,#0]
000082  481f              LDR      r0,|L4.256|
000084  180d              ADDS     r5,r1,r0
000086  7831              LDRB     r1,[r6,#0]
000088  6828              LDR      r0,[r5,#0]
00008a  fa02f101          LSL      r1,r2,r1
00008e  4308              ORRS     r0,r0,r1
;;;164      LL_TIM_OC_EnablePreload(TIM13, LL_TIM_CHANNEL_CH1);
;;;165      TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_PWM1;
000090  6028              STR      r0,[r5,#0]
000092  2060              MOVS     r0,#0x60
000094  e9cd0400          STRD     r0,r4,[sp,#0]
;;;166      TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
;;;167      TIM_OC_InitStruct.OCNState = LL_TIM_OCSTATE_DISABLE;
;;;168      TIM_OC_InitStruct.CompareValue = 0;
000098  9402              STR      r4,[sp,#8]
;;;169      TIM_OC_InitStruct.OCPolarity = LL_TIM_OCPOLARITY_HIGH;
00009a  9403              STR      r4,[sp,#0xc]
;;;170      LL_TIM_OC_Init(TIM13, LL_TIM_CHANNEL_CH1, &TIM_OC_InitStruct);
00009c  466a              MOV      r2,sp
00009e  2101              MOVS     r1,#1
0000a0  4640              MOV      r0,r8
0000a2  9404              STR      r4,[sp,#0x10]
0000a4  f7fffffe          BL       LL_TIM_OC_Init
0000a8  7831              LDRB     r1,[r6,#0]
0000aa  6828              LDR      r0,[r5,#0]
0000ac  fa07f101          LSL      r1,r7,r1
0000b0  4388              BICS     r0,r0,r1
0000b2  6028              STR      r0,[r5,#0]
0000b4  4814              LDR      r0,|L4.264|
0000b6  6801              LDR      r1,[r0,#0]
0000b8  f0410101          ORR      r1,r1,#1
0000bc  6001              STR      r1,[r0,#0]
0000be  6800              LDR      r0,[r0,#0]
;;;171      LL_TIM_OC_DisableFast(TIM13, LL_TIM_CHANNEL_CH1);
;;;172      LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
;;;173        /**TIM13 GPIO Configuration    
;;;174        PA6     ------> TIM13_CH1 
;;;175        */
;;;176      GPIO_InitStruct.Pin = TFT_LED_Pin;
;;;177      GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
;;;178      GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
;;;179      GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
;;;180      GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
;;;181      GPIO_InitStruct.Alternate = LL_GPIO_AF_9;
;;;182      LL_GPIO_Init(TFT_LED_GPIO_Port, &GPIO_InitStruct);
0000c0  a908              ADD      r1,sp,#0x20
0000c2  f0000001          AND      r0,r0,#1
0000c6  9013              STR      r0,[sp,#0x4c]         ;176
0000c8  2040              MOVS     r0,#0x40              ;176
0000ca  9008              STR      r0,[sp,#0x20]         ;177
0000cc  2002              MOVS     r0,#2                 ;177
0000ce  e9cd0409          STRD     r0,r4,[sp,#0x24]      ;177
0000d2  2009              MOVS     r0,#9                 ;181
0000d4  e9cd400c          STRD     r4,r0,[sp,#0x30]
0000d8  940b              STR      r4,[sp,#0x2c]
0000da  480c              LDR      r0,|L4.268|
0000dc  f7fffffe          BL       LL_GPIO_Init
;;;183    
;;;184    }
0000e0  b014              ADD      sp,sp,#0x50
0000e2  e8bd81f0          POP      {r4-r8,pc}
;;;185    /* TIM14 init function */
                          ENDP

0000e6  0000              DCW      0x0000
                  |L4.232|
                          DCD      0x40023840
                  |L4.236|
                          DCD      0xe000ed0c
                  |L4.240|
                          DCD      0xe000e02c
                  |L4.244|
                          DCD      0xe000e004
                  |L4.248|
                          DCD      0x40001c00
                  |L4.252|
                          DCD      ||.constdata||
                  |L4.256|
                          DCD      0x40001c18
                  |L4.260|
                          DCD      ||.constdata||+0x7
                  |L4.264|
                          DCD      0x40023830
                  |L4.268|
                          DCD      0x40020000

                          AREA ||i.MX_TIM14_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM14_Init PROC
;;;185    /* TIM14 init function */
;;;186    void MX_TIM14_Init(void)
000000  b500              PUSH     {lr}
;;;187    {
000002  b087              SUB      sp,sp,#0x1c
;;;188      LL_TIM_InitTypeDef TIM_InitStruct = {0};
000004  2100              MOVS     r1,#0
000006  480b              LDR      r0,|L5.52|
000008  9100              STR      r1,[sp,#0]
00000a  9101              STR      r1,[sp,#4]
00000c  9102              STR      r1,[sp,#8]
00000e  9103              STR      r1,[sp,#0xc]
000010  9104              STR      r1,[sp,#0x10]
000012  6802              LDR      r2,[r0,#0]
000014  f4427280          ORR      r2,r2,#0x100
000018  6002              STR      r2,[r0,#0]
00001a  6800              LDR      r0,[r0,#0]
00001c  f4007080          AND      r0,r0,#0x100
;;;189    
;;;190      /* Peripheral clock enable */
;;;191      LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM14);
;;;192    
;;;193      TIM_InitStruct.Prescaler = 0;
000020  9005              STR      r0,[sp,#0x14]
000022  f8ad1000          STRH     r1,[sp,#0]
;;;194      TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
;;;195      TIM_InitStruct.Autoreload = 0;
;;;196      TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
;;;197      LL_TIM_Init(TIM14, &TIM_InitStruct);
000026  4669              MOV      r1,sp
000028  4803              LDR      r0,|L5.56|
00002a  f7fffffe          BL       LL_TIM_Init
;;;198    
;;;199    }
00002e  b007              ADD      sp,sp,#0x1c
000030  bd00              POP      {pc}
;;;200    
                          ENDP

000032  0000              DCW      0x0000
                  |L5.52|
                          DCD      0x40023840
                  |L5.56|
                          DCD      0x40002000

                          AREA ||i.MX_TIM6_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM6_Init PROC
;;;47     /* TIM6 init function */
;;;48     void MX_TIM6_Init(void)
000000  b510              PUSH     {r4,lr}
;;;49     {
000002  b086              SUB      sp,sp,#0x18
;;;50       LL_TIM_InitTypeDef TIM_InitStruct = {0};
000004  2100              MOVS     r1,#0
000006  481b              LDR      r0,|L6.116|
000008  9100              STR      r1,[sp,#0]
00000a  9101              STR      r1,[sp,#4]
00000c  9102              STR      r1,[sp,#8]
00000e  9103              STR      r1,[sp,#0xc]
000010  9104              STR      r1,[sp,#0x10]
000012  6802              LDR      r2,[r0,#0]
000014  f0420210          ORR      r2,r2,#0x10
000018  6002              STR      r2,[r0,#0]
00001a  6800              LDR      r0,[r0,#0]
00001c  f0000010          AND      r0,r0,#0x10
000020  9005              STR      r0,[sp,#0x14]
000022  4815              LDR      r0,|L6.120|
000024  6800              LDR      r0,[r0,#0]
000026  f3c02002          UBFX     r0,r0,#8,#3
00002a  1d02              ADDS     r2,r0,#4
00002c  2a07              CMP      r2,#7
00002e  bf34              ITE      CC
000030  2000              MOVCC    r0,#0
000032  1ec0              SUBCS    r0,r0,#3
000034  fa01f000          LSL      r0,r1,r0
000038  4910              LDR      r1,|L6.124|
00003a  0100              LSLS     r0,r0,#4
00003c  f8810400          STRB     r0,[r1,#0x400]
000040  490f              LDR      r1,|L6.128|
000042  f44f0080          MOV      r0,#0x400000
000046  f8c10100          STR      r0,[r1,#0x100]
;;;51     
;;;52       /* Peripheral clock enable */
;;;53       LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM6);
;;;54     
;;;55       /* TIM6 interrupt Init */
;;;56       NVIC_SetPriority(TIM6_DAC_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
;;;57       NVIC_EnableIRQ(TIM6_DAC_IRQn);
;;;58     
;;;59       TIM_InitStruct.Prescaler = 83;
00004a  2053              MOVS     r0,#0x53
00004c  f8ad0000          STRH     r0,[sp,#0]
;;;60       TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
;;;61       TIM_InitStruct.Autoreload = 16666;
000050  f244101a          MOV      r0,#0x411a
;;;62       LL_TIM_Init(TIM6, &TIM_InitStruct);
000054  4c0b              LDR      r4,|L6.132|
000056  9002              STR      r0,[sp,#8]
000058  4669              MOV      r1,sp
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       LL_TIM_Init
000060  6860              LDR      r0,[r4,#4]
000062  f0200070          BIC      r0,r0,#0x70
000066  6060              STR      r0,[r4,#4]
000068  68a0              LDR      r0,[r4,#8]
00006a  f0200080          BIC      r0,r0,#0x80
00006e  60a0              STR      r0,[r4,#8]
;;;63       LL_TIM_SetTriggerOutput(TIM6, LL_TIM_TRGO_RESET);
;;;64       LL_TIM_DisableMasterSlaveMode(TIM6);
;;;65     
;;;66     }
000070  b006              ADD      sp,sp,#0x18
000072  bd10              POP      {r4,pc}
;;;67     /* TIM7 init function */
                          ENDP

                  |L6.116|
                          DCD      0x40023840
                  |L6.120|
                          DCD      0xe000ed0c
                  |L6.124|
                          DCD      0xe000e036
                  |L6.128|
                          DCD      0xe000e004
                  |L6.132|
                          DCD      0x40001000

                          AREA ||i.MX_TIM7_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM7_Init PROC
;;;67     /* TIM7 init function */
;;;68     void MX_TIM7_Init(void)
000000  b510              PUSH     {r4,lr}
;;;69     {
000002  b086              SUB      sp,sp,#0x18
;;;70       LL_TIM_InitTypeDef TIM_InitStruct = {0};
000004  2100              MOVS     r1,#0
000006  480f              LDR      r0,|L7.68|
000008  9100              STR      r1,[sp,#0]
00000a  9101              STR      r1,[sp,#4]
00000c  9102              STR      r1,[sp,#8]
00000e  9103              STR      r1,[sp,#0xc]
000010  9104              STR      r1,[sp,#0x10]
000012  6802              LDR      r2,[r0,#0]
000014  f0420220          ORR      r2,r2,#0x20
000018  6002              STR      r2,[r0,#0]
00001a  6800              LDR      r0,[r0,#0]
;;;71     
;;;72       /* Peripheral clock enable */
;;;73       LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM7);
;;;74     
;;;75       TIM_InitStruct.Prescaler = 0;
;;;76       TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
;;;77       TIM_InitStruct.Autoreload = 0;
;;;78       LL_TIM_Init(TIM7, &TIM_InitStruct);
00001c  4c0a              LDR      r4,|L7.72|
00001e  f0000020          AND      r0,r0,#0x20
000022  9005              STR      r0,[sp,#0x14]         ;75
000024  f8ad1000          STRH     r1,[sp,#0]            ;75
000028  4669              MOV      r1,sp
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       LL_TIM_Init
000030  6860              LDR      r0,[r4,#4]
000032  f0200070          BIC      r0,r0,#0x70
000036  6060              STR      r0,[r4,#4]
000038  68a0              LDR      r0,[r4,#8]
00003a  f0200080          BIC      r0,r0,#0x80
00003e  60a0              STR      r0,[r4,#8]
;;;79       LL_TIM_SetTriggerOutput(TIM7, LL_TIM_TRGO_RESET);
;;;80       LL_TIM_DisableMasterSlaveMode(TIM7);
;;;81     
;;;82     }
000040  b006              ADD      sp,sp,#0x18
000042  bd10              POP      {r4,pc}
;;;83     /* TIM9 init function */
                          ENDP

                  |L7.68|
                          DCD      0x40023840
                  |L7.72|
                          DCD      0x40001400

                          AREA ||i.MX_TIM9_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM9_Init PROC
;;;83     /* TIM9 init function */
;;;84     void MX_TIM9_Init(void)
000000  b510              PUSH     {r4,lr}
;;;85     {
000002  b086              SUB      sp,sp,#0x18
;;;86       LL_TIM_InitTypeDef TIM_InitStruct = {0};
000004  2100              MOVS     r1,#0
000006  480e              LDR      r0,|L8.64|
000008  9100              STR      r1,[sp,#0]
00000a  9101              STR      r1,[sp,#4]
00000c  9102              STR      r1,[sp,#8]
00000e  9103              STR      r1,[sp,#0xc]
000010  9104              STR      r1,[sp,#0x10]
000012  6802              LDR      r2,[r0,#0]
000014  f4423280          ORR      r2,r2,#0x10000
000018  6002              STR      r2,[r0,#0]
00001a  6800              LDR      r0,[r0,#0]
;;;87     
;;;88       /* Peripheral clock enable */
;;;89       LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_TIM9);
;;;90     
;;;91       TIM_InitStruct.Prescaler = 0;
;;;92       TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
;;;93       TIM_InitStruct.Autoreload = 0;
;;;94       TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
;;;95       LL_TIM_Init(TIM9, &TIM_InitStruct);
00001c  4c09              LDR      r4,|L8.68|
00001e  f4003080          AND      r0,r0,#0x10000
000022  9005              STR      r0,[sp,#0x14]         ;91
000024  f8ad1000          STRH     r1,[sp,#0]            ;91
000028  4669              MOV      r1,sp
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       LL_TIM_Init
000030  68a0              LDR      r0,[r4,#8]
000032  f0200007          BIC      r0,r0,#7
000036  f4204080          BIC      r0,r0,#0x4000
00003a  60a0              STR      r0,[r4,#8]
;;;96       LL_TIM_SetClockSource(TIM9, LL_TIM_CLOCKSOURCE_INTERNAL);
;;;97     
;;;98     }
00003c  b006              ADD      sp,sp,#0x18
00003e  bd10              POP      {r4,pc}
;;;99     /* TIM10 init function */
                          ENDP

                  |L8.64|
                          DCD      0x40023844
                  |L8.68|
                          DCD      0x40014000

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  OFFSET_TAB_CCMRx
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  040404            DCB      0x04,0x04,0x04
                  SHIFT_TAB_OCxx
000007  00                DCB      0x00
000008  00080000          DCB      0x00,0x08,0x00,0x00
00000c  0008              DCB      0x00,0x08

;*** Start embedded assembler ***

#line 1 "../Src/tim.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_tim_c_4ca9642c____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___5_tim_c_4ca9642c____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_tim_c_4ca9642c____REVSH|
#line 402
|__asm___5_tim_c_4ca9642c____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_tim_c_4ca9642c____RRX|
#line 587
|__asm___5_tim_c_4ca9642c____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
